

#include <iostream>
using namespace std;

#define SIZE 5

class Stack {
    int top;
    int arr[SIZE];

public:
    Stack() { top = -1; }

    void push(int val) {
        if (isFull())
            cout << "Stack Overflow!\n";
        else
            arr[++top] = val;
    }

    void pop() {
        if (isEmpty())
            cout << "Stack Underflow!\n";
        else
            cout << "Popped element: " << arr[top--] << endl;
    }

    bool isEmpty() { return top == -1; }

    bool isFull() { return top == SIZE - 1; }

    void peek() {
        if (!isEmpty())
            cout << "Top element: " << arr[top] << endl;
        else
            cout << "Stack is empty!\n";
    }

    void display() {
        if (isEmpty())
            cout << "Stack is empty!\n";
        else {
            cout << "Stack elements: ";
            for (int i = top; i >= 0; i--)
                cout << arr[i] << " ";
            cout << endl;
        }
    }
};

int main() {
    Stack s;
    int choice, val;
    do {
        cout << "\n--- STACK MENU ---\n";
        cout << "1. PUSH\n2. POP\n3. isEmpty\n4. isFull\n5. DISPLAY\n6. PEEK\n7. EXIT\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter value to push: ";
                cin >> val;
                s.push(val);
                break;
            case 2:
                s.pop();
                break;
            case 3:
                cout << (s.isEmpty() ? "Stack is Empty\n" : "Stack is not Empty\n");
                break;
            case 4:
                cout << (s.isFull() ? "Stack is Full\n" : "Stack is not Full\n");
                break;
            case 5:
                s.display();
                break;
            case 6:
                s.peek();
                break;
        }
    } while (choice != 7);
    return 0;
}
